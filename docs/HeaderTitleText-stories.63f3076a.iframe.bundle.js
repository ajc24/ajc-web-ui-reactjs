"use strict";(self.webpackChunkajc_web_ui_react_js=self.webpackChunkajc_web_ui_react_js||[]).push([[547],{"./stories/header/HeaderTitleText.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,InHeaderBaseCentreAligned:()=>InHeaderBaseCentreAligned,InHeaderBaseLeftAligned:()=>InHeaderBaseLeftAligned,WithCentreAlignment:()=>WithCentreAlignment,WithLeftAlignment:()=>WithLeftAlignment,WithWhiteText:()=>WithWhiteText,WrappingAndTruncation:()=>WrappingAndTruncation,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Header Components/Header Title Text",component:_src__WEBPACK_IMPORTED_MODULE_1__.Vq,tags:["autodocs"]},Template_HeaderTitleText=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_1__.Vq,args)),Template_HeaderTitleTextInHeaderBase=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_1__.H1,{id:"base-id"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_1__.Vq,args))),Default=Template_HeaderTitleText.bind({});Default.args={children:"Header Title Text",id:"default-id"};const WrappingAndTruncation=Template_HeaderTitleText.bind({});WrappingAndTruncation.args={children:"This Text Will Reduce In Font Size, Wrap And Truncate",id:"wrapped-and-truncated-id"};const WithLeftAlignment=Template_HeaderTitleText.bind({});WithLeftAlignment.args={alignment:"left",children:"Header Title Text (Left Alignment)",id:"with-left-alignment-id"};const WithCentreAlignment=Template_HeaderTitleText.bind({});WithCentreAlignment.args={alignment:"centre",children:"Header Title Text (Centre Alignment)",id:"with-centre-alignment-id"};const WithWhiteText=Template_HeaderTitleText.bind({});WithWhiteText.args={children:"Header Title Text In White Colour",id:"with-white-text-id",textColour:"white"};const InHeaderBaseLeftAligned=Template_HeaderTitleTextInHeaderBase.bind({});InHeaderBaseLeftAligned.args={alignment:"left",children:"In Header Base Component (Left Alignment)",id:"in-header-base-left-alignment-id"};const InHeaderBaseCentreAligned=Template_HeaderTitleTextInHeaderBase.bind({});InHeaderBaseCentreAligned.args={alignment:"centre",children:"In Header Base Component (Centre Alignment)",id:"in-header-base-centre-alignment-id"};const __namedExportsOrder=["Default","WrappingAndTruncation","WithLeftAlignment","WithCentreAlignment","WithWhiteText","InHeaderBaseLeftAligned","InHeaderBaseCentreAligned"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  return <React.Fragment>\r\n    <HeaderTitleText {...args} />\r\n  </React.Fragment>;\n}",...Default.parameters?.docs?.source}}},WrappingAndTruncation.parameters={...WrappingAndTruncation.parameters,docs:{...WrappingAndTruncation.parameters?.docs,source:{originalSource:"args => {\n  return <React.Fragment>\r\n    <HeaderTitleText {...args} />\r\n  </React.Fragment>;\n}",...WrappingAndTruncation.parameters?.docs?.source}}},WithLeftAlignment.parameters={...WithLeftAlignment.parameters,docs:{...WithLeftAlignment.parameters?.docs,source:{originalSource:"args => {\n  return <React.Fragment>\r\n    <HeaderTitleText {...args} />\r\n  </React.Fragment>;\n}",...WithLeftAlignment.parameters?.docs?.source}}},WithCentreAlignment.parameters={...WithCentreAlignment.parameters,docs:{...WithCentreAlignment.parameters?.docs,source:{originalSource:"args => {\n  return <React.Fragment>\r\n    <HeaderTitleText {...args} />\r\n  </React.Fragment>;\n}",...WithCentreAlignment.parameters?.docs?.source}}},WithWhiteText.parameters={...WithWhiteText.parameters,docs:{...WithWhiteText.parameters?.docs,source:{originalSource:"args => {\n  return <React.Fragment>\r\n    <HeaderTitleText {...args} />\r\n  </React.Fragment>;\n}",...WithWhiteText.parameters?.docs?.source}}},InHeaderBaseLeftAligned.parameters={...InHeaderBaseLeftAligned.parameters,docs:{...InHeaderBaseLeftAligned.parameters?.docs,source:{originalSource:'args => {\n  return <React.Fragment>\r\n    <HeaderBase id="base-id">\r\n      <HeaderTitleText {...args} />\r\n    </HeaderBase>\r\n  </React.Fragment>;\n}',...InHeaderBaseLeftAligned.parameters?.docs?.source}}},InHeaderBaseCentreAligned.parameters={...InHeaderBaseCentreAligned.parameters,docs:{...InHeaderBaseCentreAligned.parameters?.docs,source:{originalSource:'args => {\n  return <React.Fragment>\r\n    <HeaderBase id="base-id">\r\n      <HeaderTitleText {...args} />\r\n    </HeaderBase>\r\n  </React.Fragment>;\n}',...InHeaderBaseCentreAligned.parameters?.docs?.source}}}}}]);